def is_safe(graph, colors, region, color):
    for neighbor in graph[region]:
        if colors[neighbor] == color:
            return False
    return True

def map_coloring(graph, m, colors, region):
    if region == len(graph):
        return True

    for color in range(1, m + 1):
        if is_safe(graph, colors, region, color):
            colors[region] = color
            if map_coloring(graph, m, colors, region + 1):
                return True
            colors[region] = 0
    return False

def solve_map_coloring(graph, m):
    colors = [0] * len(graph)
    if map_coloring(graph, m, colors, 0):
        return colors
    else:
        return "No solution"

graph = {
    0: [1, 2],
    1: [0, 2, 3],
    2: [0, 1, 3],
    3: [1, 2]
}

m = 3
result = solve_map_coloring(graph, m)
print("Solution:", result)
